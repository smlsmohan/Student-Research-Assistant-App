"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/register/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase-auth */ \"(app-pages-browser)/./src/lib/supabase-auth.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [searchCount, setSearchCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const supabase = (0,_lib_supabase_auth__WEBPACK_IMPORTED_MODULE_2__.createClient)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            let mounted = true;\n            // Set a timeout to prevent infinite loading\n            const loadingTimeout = setTimeout({\n                \"AuthProvider.useEffect.loadingTimeout\": ()=>{\n                    if (mounted) {\n                        console.warn('Auth initialization taking too long, setting loading to false');\n                        setLoading(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.loadingTimeout\"], 5000); // 5 second timeout\n            // Get initial session\n            const getSession = {\n                \"AuthProvider.useEffect.getSession\": async ()=>{\n                    try {\n                        const { data: { session } } = await supabase.auth.getSession();\n                        if (!mounted) return;\n                        setSession(session);\n                        var _session_user;\n                        setUser((_session_user = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user !== void 0 ? _session_user : null);\n                        // Load search count for user\n                        if (session === null || session === void 0 ? void 0 : session.user) {\n                            await loadUserSearchCount(session.user.id);\n                        }\n                    } catch (error) {\n                        console.error('Error getting session:', error);\n                    } finally{\n                        if (mounted) {\n                            clearTimeout(loadingTimeout);\n                            setLoading(false);\n                        }\n                    }\n                }\n            }[\"AuthProvider.useEffect.getSession\"];\n            getSession();\n            // Listen for auth changes\n            const { data: { subscription } } = supabase.auth.onAuthStateChange({\n                \"AuthProvider.useEffect\": async (event, session)=>{\n                    if (!mounted) return;\n                    setSession(session);\n                    var _session_user;\n                    setUser((_session_user = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user !== void 0 ? _session_user : null);\n                    if (session === null || session === void 0 ? void 0 : session.user) {\n                        await loadUserSearchCount(session.user.id);\n                    } else {\n                        setSearchCount(0);\n                    }\n                    setLoading(false);\n                }\n            }[\"AuthProvider.useEffect\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    mounted = false;\n                    clearTimeout(loadingTimeout);\n                    subscription.unsubscribe();\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        supabase\n    ]); // loadUserSearchCount is defined below this useEffect\n    const loadUserSearchCount = async (userId)=>{\n        try {\n            // Add timeout to prevent hanging\n            const timeoutPromise = new Promise((_, reject)=>setTimeout(()=>reject(new Error('Search count query timeout')), 3000));\n            const queryPromise = supabase.from('user_search_counts').select('search_count').eq('user_id', userId).single();\n            const result = await Promise.race([\n                queryPromise,\n                timeoutPromise\n            ]);\n            const { data, error } = result;\n            if (error && error.code !== 'PGRST116') {\n                console.error('Error loading search count:', error);\n                // Set default value instead of hanging\n                setSearchCount(0);\n                return;\n            }\n            setSearchCount((data === null || data === void 0 ? void 0 : data.search_count) || 0);\n        } catch (error) {\n            console.error('Error loading search count:', error);\n            // Set default value on any error\n            setSearchCount(0);\n        }\n    };\n    const signUp = async (email, password, fullName)=>{\n        try {\n            const { error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        full_name: fullName\n                    },\n                    emailRedirectTo: \"\".concat(window.location.origin, \"/auth/confirm\")\n                }\n            });\n            return {\n                error: error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        }\n    };\n    const signIn = async (email, password)=>{\n        try {\n            const { error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            return {\n                error: error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        }\n    };\n    const signOut = async ()=>{\n        await supabase.auth.signOut();\n        setSearchCount(0);\n    };\n    const resetPassword = async (email)=>{\n        try {\n            const { error } = await supabase.auth.resetPasswordForEmail(email, {\n                redirectTo: \"\".concat(window.location.origin, \"/auth/reset-password\")\n            });\n            return {\n                error: error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        }\n    };\n    const incrementSearchCount = async ()=>{\n        if (!user) return;\n        const newCount = searchCount + 1;\n        setSearchCount(newCount);\n        try {\n            const { error } = await supabase.from('user_search_counts').upsert({\n                user_id: user.id,\n                search_count: newCount\n            }, {\n                onConflict: 'user_id'\n            });\n            if (error) {\n                console.error('Error updating search count:', error);\n                // Revert optimistic update on error\n                setSearchCount(searchCount);\n            }\n        } catch (error) {\n            console.error('Error updating search count:', error);\n            setSearchCount(searchCount);\n        }\n    };\n    const resetSearchCount = ()=>{\n        setSearchCount(0);\n    };\n    const canSearch = searchCount < 5;\n    const value = {\n        user,\n        session,\n        loading,\n        signUp,\n        signIn,\n        signOut,\n        resetPassword,\n        searchCount,\n        canSearch,\n        incrementSearchCount,\n        resetSearchCount\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/mohan/Development/Projects/Mohan_research_app/Student-Research-Assistant-App/src/contexts/AuthContext.tsx\",\n        lineNumber: 213,\n        columnNumber: 10\n    }, this);\n}\n_s(AuthProvider, \"8fHlnWFPnx4UkZTUANnkxIOYdk0=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});